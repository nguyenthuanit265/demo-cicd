name: Deploy to Production

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      DOCKER_IMAGE: nguyenthuanit265/demo-cicd

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build with Maven
        run: mvn clean package -DskipTests
      - name: Create application.yml
        run: |
          mkdir -p src/main/resources
          cat > src/main/resources/application.yml << EOF
          server:
            port: ${{ secrets.SERVER_PORT }}
          spring:
            application:
              name: demo-cicd
          EOF
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        run: |
          docker build -t $DOCKER_IMAGE:${{ github.sha }} .
          docker push $DOCKER_IMAGE:${{ github.sha }}

      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Pull the new image
            docker pull ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
            
            # Stop and remove the existing container
            docker stop app-container-demo-cicd || true
            docker rm app-container-demo-cicd || true
            
            # Run the new container
            docker run -d \
              --name app-container-demo-cicd \
              -p ${{ secrets.SERVER_PORT }}:${{ secrets.SERVER_PORT }} \
              ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
            
            # Wait for container to start
            sleep 15
            
            # Check container logs
            echo "Container Logs:"
            docker logs app-container-demo-cicd
            
            # Verify container is running and healthy
            if ! docker ps | grep -q app-container-demo-cicd then
              echo "Container failed to start"
              docker logs app-container-demo-cicd
              exit 1
            fi
